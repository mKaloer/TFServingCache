apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tfservingcache.fullname" . }}
  labels:
    {{- include "tfservingcache.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- if .Values.logLevel }}
    logLevel: {{ .Values.logLevel }}
    {{- end }}

    proxyRestPort: {{ .Values.cache.ports.proxyHttp }}
    proxyGrpcPort: {{ .Values.cache.ports.proxyGrpc }}
    cacheRestPort: {{ .Values.cache.ports.cacheHttp }}
    cacheGrpcPort: {{ .Values.cache.ports.cacheGrpc }}

    metrics:
      path: "/monitoring/prometheus/metrics"
      timeout: 3
      modelLabels: false

    modelProvider:
    {{- with .Values.models.provider.hostPath }}
      type: diskProvider
      diskProvider:
        baseDir: {{ .mount }}
    {{- end }}
    {{- with .Values.models.provider.s3 }}
      type: s3Provider
      s3:
        bucket: {{ .bucket }}
        basePath: {{ .path }}
    {{- end }}

    modelCache:
      hostModelPath: {{ .Values.models.cache.path }}
      size: {{ .Values.models.cache.size }}

    serving:
      servingModelPath: {{ .Values.models.cache.path }}
      grpcHost: "localhost:{{ .Values.serving.ports.grpc }}"
      restHost: "http://localhost:{{ .Values.serving.ports.http }}"
      maxConcurrentModels: 2
      grpcConfigTimeout: 10 
      grpcPredictTimeout: 60

    serviceDiscovery:
      type: k8s
      k8s:
        fieldSelector:
          metadata.name: {{ include "tfservingcache.fullname" . }}-cache
        portNames:
          grpcCache: grpc-cache
          httpCache: http-cache
