apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tfservingcache.fullname" . }}
  labels:
    {{- include "tfservingcache.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: 
      {{- include "tfservingcache.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "tfservingcache.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tfservingcache.serviceAccountName" . }}
      containers:
        - name: "cache"
          image: "{{ .Values.cache.image.repository }}:{{ .Values.cache.image.tag }}"
          imagePullPolicy: {{ .Values.cache.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.cache.ports.proxyHttp }}
              name: http-proxy
            - containerPort: {{ .Values.cache.ports.proxyGrpc }}
              name: grpc-proxy
            - containerPort: {{ .Values.cache.ports.cacheHttp }}
              name: http-cache
            - containerPort: {{ .Values.cache.ports.cacheGrpc }}
              name: grpc-cache
          livenessProbe:
            grpc:
              port: {{ .Values.cache.ports.proxyGrpc }}
            initialDelaySeconds: 10
            timeoutSeconds: 60
            periodSeconds: 60
          startupProbe:
            grpc:
              port: {{ .Values.cache.ports.proxyGrpc }}
            periodSeconds: 30
            timeoutSeconds: 60
          readinessProbe:
            grpc:
              port: {{ .Values.cache.ports.proxyGrpc }}
            timeoutSeconds: 60
            initialDelaySeconds: 5
          volumeMounts:
            - name: cache-config
              mountPath: /tfservingcache/config.yaml
              subPath: config.yaml
          {{- with .Values.models.provider.hostPath }}
          {{- if .mount }}              
            - name: models
              mountPath: {{ .mount }}
           {{- end }}   
          {{- end }}
            - name: cache
              mountPath: {{ .Values.models.cache.path }}
          resources:
            {{- toYaml .Values.cache.resources | nindent 12 }}
          env:
          {{- if .Values.models.provider.azBlob }}
          {{- with .Values.models.provider.azBlob.secretKeyRef }}
            {{- if .containerKey }}
            - name: TFSC_MODELPROVIDER_AZBLOB_CONTAINER
              valueFrom: 
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .containerKey }}
            {{- end }}
            {{- if .containerUrlKey }}
            - name: TFSC_MODELPROVIDER_AZBLOB_CONTAINERURL
              valueFrom: 
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .containerUrlKey }}
            {{- end }}
            {{- if .basePathKey }}
            - name: TFSC_MODELPROVIDER_AZBLOB_BASEPATH
              valueFrom: 
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .basePathKey }}
            {{- end }}
            {{- if .accountNameKey }}
            - name: TFSC_MODELPROVIDER_AZBLOB_ACCOUNTNAME
              valueFrom: 
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .accountNameKey }}
            {{- end }}
            {{- if .accountKeyKey }}
            - name: TFSC_MODELPROVIDER_AZBLOB_ACCOUNTKEY
              valueFrom: 
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .accountKeyKey }}
            {{- end }}
          {{- end }}
          {{- end }}
            - name: TFSC_HEALTHPROBE_MODELNAME
              value: {{ .Values.healthProbe.modelName }}
        - name: "serving"
          image: "{{ .Values.serving.image.repository }}:{{ .Values.serving.image.tag }}"
          imagePullPolicy: {{ .Values.serving.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - >
              echo 'model_config_list {}' > models.config \
              && echo 'prometheus_config { enable: true, path: "/monitoring/prometheus/metrics" }' > monitoring.config \
              && /usr/bin/tensorflow_model_server \
                --port={{ .Values.serving.ports.grpc }} \
                --rest_api_port={{ .Values.serving.ports.http }} \
                --model_config_file=models.config \
                --monitoring_config_file=monitoring.config
          volumeMounts:
            - name: cache
              mountPath: {{ .Values.models.cache.path }}
          resources:
            {{- toYaml .Values.serving.resources | nindent 12 }}
      volumes:
        - name: cache-config
          configMap:
            name: {{ include "tfservingcache.fullname" . }}
        - name: cache
          emptyDir: {}
      {{- with .Values.models.provider.hostPath }}
        - name: models
          hostPath:
            path: {{ .path }}
            type: Directory
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
 